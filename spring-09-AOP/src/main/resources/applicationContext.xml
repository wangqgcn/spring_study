<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    注册Bean-->
    <bean id="userService" class="com.quint.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.quint.log.BeforeLog"/>
    <bean id="afterLog" class="com.quint.log.AfterLog"/>

<!--    方法一：使用原生Spring API接口-->
<!--    配置aop:需要倒入aop的约束-->
<!--    <aop:config>-->
<!--&lt;!&ndash;        切入点:expression:表达式, execution(要执行的位置！***）&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.quint.service.UserServiceImpl.*(..)) "/>-->

<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog"  pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->

<!--    方法二：自定义类-->
<!--    <bean id="diy" class="com.quint.diy.DiyPointCut"/>-->

<!--    <aop:config>-->
<!--        <aop:aspect ref="diy">-->
<!--            <aop:pointcut id="point" expression="execution(* com.quint.service.UserServiceImpl.*(..)) "/>-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:after method="after"   pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

<!--    方式三-->
    <bean id="annotationPointCut" class="com.quint.diy.AnnotationPointCut"/>
<!--    开启注解支持-->
    <aop:aspectj-autoproxy/>
</beans>